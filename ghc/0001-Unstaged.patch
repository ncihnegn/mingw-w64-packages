diff --git a/Makefile b/Makefile
index 9b888e7..cc14663 100644
--- a/Makefile
+++ b/Makefile
@@ -131,7 +131,7 @@ endif
 
 .PHONY: binary-dist
 binary-dist: binary-dist-prep
-	mv bindistprep/*.tar.$(TAR_COMP_EXT) .
+	#mv bindistprep/*.tar.$(TAR_COMP_EXT) .
 
 .PHONY: binary-dist-prep
 binary-dist-prep:
diff --git a/configure.ac b/configure.ac
index 1a38500..f49250e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -322,7 +322,7 @@ set_up_tarballs() {
     mk/get-win32-tarballs.sh $action $HostArch > missing-win32-tarballs
     case $? in
         0)
-           rm missing-win32-tarballs
+           #rm missing-win32-tarballs
            ;;
         2)
            echo
@@ -362,9 +362,9 @@ set_up_tarballs() {
 
         # NB. Now since the GCC is hardcoded to use /mingw32 we need to
         # make a wrapper around it to give it the proper paths
-        mv inplace/mingw/bin/gcc.exe inplace/mingw/bin/realgcc.exe
-        PATH=`pwd`/inplace/mingw/bin:$PATH
-        inplace/mingw/bin/realgcc.exe driver/gcc/gcc.c driver/utils/cwrapper.c driver/utils/getLocation.c -Idriver/utils -o inplace/mingw/bin/gcc.exe
+        #mv inplace/mingw/bin/gcc.exe inplace/mingw/bin/realgcc.exe
+        #PATH=`pwd`/inplace/mingw/bin:$PATH
+        #gcc.exe driver/gcc/gcc.c driver/utils/cwrapper.c driver/utils/getLocation.c -Idriver/utils -o inplace/mingw/bin/gcc.exe
 
         AC_MSG_NOTICE([In-tree MingW-w64 tree created])
     fi
@@ -375,9 +375,9 @@ then
     test -d inplace || mkdir inplace
 
     # NB. Download and extract the MingW-w64 distribution if required
-    set_up_tarballs
+    #set_up_tarballs
 
-    mingwbin="$hardtop/inplace/mingw/bin/"
+    mingwbin="" #"$hardtop/inplace/mingw/bin/"
     CC="${mingwbin}gcc.exe"
     LD="${mingwbin}ld.exe"
     NM="${mingwbin}nm.exe"
@@ -388,18 +388,18 @@ then
     fp_prog_ar="${mingwbin}ar.exe"
 
     # NB. Download the perl binaries if required
-    if ! test -d inplace/perl ||
-         test inplace/perl -ot ghc-tarballs/perl/ghc-perl*.tar.gz
-    then
-        AC_MSG_NOTICE([Making in-tree perl tree])
-        rm -rf inplace/perl
-        mkdir inplace/perl
-        (
-            cd inplace/perl &&
-            tar -zxf ../../ghc-tarballs/perl/ghc-perl*.tar.gz
-        )
-        AC_MSG_NOTICE([In-tree perl tree created])
-    fi
+    #if ! test -d inplace/perl ||
+    #     test inplace/perl -ot ghc-tarballs/perl/ghc-perl*.tar.gz
+    #then
+    #    AC_MSG_NOTICE([Making in-tree perl tree])
+    #    rm -rf inplace/perl
+    #    mkdir inplace/perl
+    #    (
+    #        cd inplace/perl &&
+    #        tar -zxf ../../ghc-tarballs/perl/ghc-perl*.tar.gz
+    #    )
+    #    AC_MSG_NOTICE([In-tree perl tree created])
+    #fi
 fi
 
 FP_ICONV
@@ -537,7 +537,7 @@ esac
 # tools we are looking for. In the past, GHC supported a number of
 # versions of LLVM simultaneously, but that stopped working around
 # 3.5/3.6 release of LLVM.
-LlvmVersion=3.8
+LlvmVersion=3.9
 AC_SUBST([LlvmVersion])
 sUPPORTED_LLVM_VERSION=$(echo \($LlvmVersion\) | sed 's/\./,/')
 AC_DEFINE_UNQUOTED([sUPPORTED_LLVM_VERSION], ${sUPPORTED_LLVM_VERSION}, [The supported LLVM version number])
@@ -577,7 +577,7 @@ AC_SYS_INTERPRETER()
 dnl ** look for `perl'
 case $HostOS_CPP in
 cygwin32|mingw32)
-    PerlCmd=$hardtop/inplace/perl/perl
+    PerlCmd=perl
     ;;
 *)
     AC_PATH_PROG(PerlCmd,perl)
diff --git a/ghc.mk b/ghc.mk
index ec9590a..dfa191f 100644
--- a/ghc.mk
+++ b/ghc.mk
@@ -836,13 +836,13 @@ endif
 
 ifeq "$(Windows_Host)" "YES"
 
-install : install_mingw
-.PHONY: install_mingw
+#install : install_mingw
+#.PHONY: install_mingw
 install_mingw : $(INPLACE_MINGW)
 	"$(CP)" -Rp $(INPLACE_MINGW) $(prefix)
 
-install : install_perl
-.PHONY: install_perl
+#install : install_perl
+#.PHONY: install_perl
 install_perl : $(INPLACE_PERL)
 	"$(CP)" -Rp $(INPLACE_PERL) $(prefix)
 
@@ -1091,7 +1091,7 @@ unix-binary-dist-prep:
 windows-binary-dist-prep:
 	$(call removeTrees,bindistprep/)
 	$(MAKE) prefix=$(TOP)/$(BIN_DIST_PREP_DIR) install
-	cd bindistprep && "$(TAR_CMD)" cf - $(BIN_DIST_NAME) | $(TAR_COMP_CMD) -c > ../$(BIN_DIST_PREP_TAR_COMP)
+	#cd bindistprep && "$(TAR_CMD)" cf - $(BIN_DIST_NAME) | $(TAR_COMP_CMD) -c > ../$(BIN_DIST_PREP_TAR_COMP)
 
 # tryTimes tries to run its third argument multiple times, until it
 # succeeds. Don't call it directly; call try10Times instead.
diff --git a/mk/config.mk.in b/mk/config.mk.in
index 7fb6902..371d24e 100644
--- a/mk/config.mk.in
+++ b/mk/config.mk.in
@@ -530,19 +530,19 @@ GccLT46         = @GccLT46@
 GccIsClang      = @GccIsClang@
 
 CC              = @CC@
-CC_STAGE0       = @CC_STAGE0@
+CC_STAGE0       = $(CC)
 CC_STAGE1       = $(CC)
 CC_STAGE2       = $(CC)
 CC_STAGE3       = $(CC)
 
 AS              = @CC@
-AS_STAGE0       = @CC_STAGE0@
+AS_STAGE0       = $(AS)
 AS_STAGE1       = $(AS)
 AS_STAGE2       = $(AS)
 AS_STAGE3       = $(AS)
 
 # why no LD=@LD@ ?
-LD_STAGE0       = @LD_STAGE0@
+LD_STAGE0       = $(LD)
 LD_STAGE1       = $(LD)
 LD_STAGE2       = $(LD)
 LD_STAGE3       = $(LD)
@@ -660,9 +660,9 @@ SRC_HSC2HS_OPTS_STAGE1 += --cflag=-D$(TargetArch_CPP)_HOST_ARCH=1 --cflag=-D$(Ta
 SRC_HSC2HS_OPTS_STAGE2 += --cflag=-D$(TargetArch_CPP)_HOST_ARCH=1 --cflag=-D$(TargetOS_CPP)_HOST_OS=1
 
 ifeq "$(TARGETPLATFORM)" "i386-unknown-mingw32"
-WINDRES = $(INPLACE_MINGW)/bin/windres
+WINDRES = windres
 else ifeq "$(TARGETPLATFORM)" "x86_64-unknown-mingw32"
-WINDRES = $(INPLACE_MINGW)/bin/windres
+WINDRES = windres
 endif
 
 #-----------------------------------------------------------------------------
@@ -670,9 +670,9 @@ endif
 #
 HaveLibMingwEx	= @HaveLibMingwEx@
 ifeq "$(TARGETPLATFORM)" "i386-unknown-mingw32"
-DLLTOOL			= inplace/mingw/bin/dlltool.exe
+DLLTOOL			= dlltool
 else ifeq "$(TARGETPLATFORM)" "x86_64-unknown-mingw32"
-DLLTOOL			= inplace/mingw/bin/dlltool.exe
+DLLTOOL			= dlltool
 endif
 
 #-----------------------------------------------------------------------------
@@ -762,7 +762,7 @@ XARGS_OPTS = -s 20000
 endif
 
 ifeq "$(TARGETPLATFORM)" "x86_64-unknown-mingw32"
-STRIP_CMD      = $(TOP)/inplace/mingw/bin/strip.exe
+STRIP_CMD      = strip
 else ifeq "$(TARGETPLATFORM)" "arm-unknown-linux"
 # The Cortex A8 hardware apparently has a bug which ld.gold will check for;
 # however in order to do so it must have unstripped executables lest we

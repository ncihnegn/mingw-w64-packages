_realname=ghc
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgdesc='The Glorious Glasgow Haskell Compilation System'
arch=('any')
pkgver=8.0.2
pkgrel=3
url='http://www.haskell.org/ghc/'
license=('The Glasgow Haskell Compiler License')
depends=("${MINGW_PACKAGE_PREFIX}-binutils"
         "${MINGW_PACKAGE_PREFIX}-crt-git"
         "${MINGW_PACKAGE_PREFIX}-gcc"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-gmp"
         "${MINGW_PACKAGE_PREFIX}-headers"
         "${MINGW_PACKAGE_PREFIX}-isl"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread"
         "${MINGW_PACKAGE_PREFIX}-mpc"
         "${MINGW_PACKAGE_PREFIX}-mpfr"
         "${MINGW_PACKAGE_PREFIX}-winpthreads-git"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=('perl' 'unzip' "${MINGW_PACKAGE_PREFIX}-python3-sphinx"
            "${MINGW_PACKAGE_PREFIX}-ghc")
optdepends=("${MINGW_PACKAGE_PREFIX}-llvm: using LLVM as backend")
options=('!strip')
source=(
  "http://downloads.haskell.org/~ghc/$pkgver/ghc-$pkgver-src.tar.xz"
  "http://downloads.haskell.org/~ghc/$pkgver/ghc-$pkgver-testsuite.tar.xz"
  'build.mk'
  '0001-Rework-CC-CC_STAGE0-handling-in-configure.ac.patch'
  '0001-Remove-special-casing-of-Windows-in-generic-files.patch'
  '0001-Switch-to-LLVM-version-3.8.patch'
  '0001-configure.ac-Remove-checks-for-bug-9439.patch'
  '0001-Unstaged.patch'
  '0002-Fix-Windows-GCC-driver.patch'
)

prepare() {
  SYST=$CARCH
  if [[ $SYST == "i686" ]]; then
     SYST="i386"
  fi
  #mkdir -p host
  #curl -LO "https://www.haskell.org/cabal/release/cabal-install-1.24.0.0/cabal-install-1.24.0.0-$SYST-unknown-mingw32.zip"
  #curl -L "http://downloads.haskell.org/~${_realname}/$pkgver/${_realname}-$pkgver-$SYST-unknown-mingw32.tar.xz" | tar -Jx --strip-components=1 --directory=host
  #unzip -o cabal-install-1.24.0.0-$SYST-unknown-mingw32.zip -d host/bin
  #export PATH=$srcdir/host/bin:$PATH
  #cabal update
  #cabal install alex happy --prefix=$srcdir/host
  cp build.mk "$srcdir/${_realname}-$pkgver/mk"
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Rework-CC-CC_STAGE0-handling-in-configure.ac.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Remove-special-casing-of-Windows-in-generic-files.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Switch-to-LLVM-version-3.8.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-configure.ac-Remove-checks-for-bug-9439.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Unstaged.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0002-Fix-Windows-GCC-driver.patch
}

build() {
  #export PATH=$srcdir/host/bin:$PATH
  cd "$srcdir/${_realname}-$pkgver"
  ./boot
  ./configure --prefix=${MINGW_PREFIX}
  make
  #make html #Need sphinx
  make pdf #Need xelatex
}

check() {
  #export PATH=$srcdir/host/bin:$PATH
  cd "$srcdir/${_realname}-$pkgver"
  make test
}

package() {
  #export PATH=$srcdir/host/bin:$PATH
  cd "$srcdir/${_realname}-$pkgver"
  make binary-dist
  mv bindistprep/${_realname}-$pkgver "$pkgdir"${MINGW_PREFIX}
}

md5sums=('d0afb5ec441b14527a53d2445cc26ec3'
         '99e3afdb7f4898f4d20dd14fbc3e1fe0'
         'c6f5e6f59fba0b94da201131c665a530'
         '07d44c6fe91e4fb67ec0639fcb742e4c'
         '505e49f6ce1c89b7ae1b5d7233762567'
         'ff74bdd7e77b919f06aa19ea1d08a19e'
         '769794184c2e50cb36cadcddc8b4f906'
         '696b3abe319d75c24fbf5900bb4262a5'
         'bab4f1594abc6970e27c2e270782a16f')

diff --git a/src/libpanic_unwind/gcc.rs b/src/libpanic_unwind/gcc.rs
index 33b24fb..97d147e 100644
--- a/src/libpanic_unwind/gcc.rs
+++ b/src/libpanic_unwind/gcc.rs
@@ -294,6 +294,7 @@ unsafe extern "C" fn rust_eh_unwind_resume(panic_ctx: *mut u8) -> ! {
 #[cfg(all(target_os="windows", target_arch = "x86", target_env="gnu"))]
 pub mod eh_frame_registry {
     #[link(name = "gcc_eh")]
+    #[link(name = "pthread")]
     #[cfg(not(cargobuild))]
     extern "C" {}
 
diff --git a/src/librustc_llvm/ffi.rs b/src/librustc_llvm/ffi.rs
index 50c68d5..be6dd53 100644
--- a/src/librustc_llvm/ffi.rs
+++ b/src/librustc_llvm/ffi.rs
@@ -2068,4 +2068,7 @@ extern {
 // during llvm-config?
 #[cfg(windows)]
 #[link(name = "ole32")]
+#[link(name = "ffi")]
+#[link(name = "gcc_eh")]
+#[link(name = "pthread")]
 extern {}
diff --git a/src/libunwind/build.rs b/src/libunwind/build.rs
index e1ddf8b..2924799 100644
--- a/src/libunwind/build.rs
+++ b/src/libunwind/build.rs
@@ -35,5 +35,6 @@ fn main() {
         println!("cargo:rustc-link-lib=gcc_pic");
     } else if target.contains("windows-gnu") {
         println!("cargo:rustc-link-lib=gcc_eh");
+        println!("cargo:rustc-link-lib=pthread");
     }
 }
diff --git a/src/libunwind/libunwind.rs b/src/libunwind/libunwind.rs
index c2edf75..c913244 100644
--- a/src/libunwind/libunwind.rs
+++ b/src/libunwind/libunwind.rs
@@ -264,5 +264,7 @@ if #[cfg(not(all(target_os = "ios", target_arch = "arm")))] {
            link(name = "c++abi"))]
 #[cfg_attr(all(target_os = "windows", target_env = "gnu"),
            link(name = "gcc_eh"))]
+#[cfg_attr(all(target_os = "windows", target_env = "gnu"),
+           link(name = "pthread"))]
 #[cfg(not(cargobuild))]
 extern "C" {}

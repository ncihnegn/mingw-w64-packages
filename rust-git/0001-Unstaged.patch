diff --git a/src/bootstrap/step.rs b/src/bootstrap/step.rs
index 35eb98e..e2f25d0 100644
--- a/src/bootstrap/step.rs
+++ b/src/bootstrap/step.rs
@@ -490,7 +490,7 @@ pub fn build_rules(build: &Build) -> Rules {
          .default(true)
          .run(move |s| dist::std(build, &s.compiler(), s.target));
     rules.dist("dist-mingw", "path/to/nowhere")
-         .default(true)
+         .default(false)
          .run(move |s| {
              if s.target.contains("pc-windows-gnu") {
                  dist::mingw(build, s.target)
diff --git a/src/libpanic_unwind/gcc.rs b/src/libpanic_unwind/gcc.rs
index 73264fa..26f4ace 100644
--- a/src/libpanic_unwind/gcc.rs
+++ b/src/libpanic_unwind/gcc.rs
@@ -299,6 +299,7 @@ unsafe extern "C" fn rust_eh_unwind_resume(panic_ctx: *mut u8) -> ! {
 #[cfg(all(target_os="windows", target_arch = "x86", target_env="gnu"))]
 pub mod eh_frame_registry {
     #[link(name = "gcc_eh")]
+    #[link(name = "pthread")]
     #[cfg(not(cargobuild))]
     extern "C" {}
 
diff --git a/src/librustc_llvm/ffi.rs b/src/librustc_llvm/ffi.rs
index f3d4c17..0696aa9 100644
--- a/src/librustc_llvm/ffi.rs
+++ b/src/librustc_llvm/ffi.rs
@@ -1653,4 +1653,7 @@ extern "C" {
 // during llvm-config?
 #[cfg(windows)]
 #[link(name = "ole32")]
+#[link(name = "ffi")]
+#[link(name = "gcc_eh")]
+#[link(name = "pthread")]
 extern "C" {}
diff --git a/src/libunwind/build.rs b/src/libunwind/build.rs
index db41a36..83bbae2 100644
--- a/src/libunwind/build.rs
+++ b/src/libunwind/build.rs
@@ -35,6 +35,7 @@ fn main() {
         println!("cargo:rustc-link-lib=gcc_pic");
     } else if target.contains("windows-gnu") {
         println!("cargo:rustc-link-lib=gcc_eh");
+        println!("cargo:rustc-link-lib=pthread");
     } else if target.contains("fuchsia") {
         println!("cargo:rustc-link-lib=unwind");
     }
diff --git a/src/libunwind/libunwind.rs b/src/libunwind/libunwind.rs
index bbac6c0..e0a58ef 100644
--- a/src/libunwind/libunwind.rs
+++ b/src/libunwind/libunwind.rs
@@ -266,5 +266,7 @@ if #[cfg(not(all(target_os = "ios", target_arch = "arm")))] {
            link(name = "c++abi"))]
 #[cfg_attr(all(target_os = "windows", target_env = "gnu"),
            link(name = "gcc_eh"))]
+#[cfg_attr(all(target_os = "windows", target_env = "gnu"),
+           link(name = "pthread"))]
 #[cfg(not(cargobuild))]
 extern "C" {}
